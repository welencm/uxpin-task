---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    region: eu-central-1
    number_of_instances: 2

  tasks:
    - name: Create VPC
      ec2_vpc:
        state: present
        cidr_block: 172.32.0.0/16
        region: '{{ region }}'
        internet_gateway: yes
        resource_tags: { 'Environment':'Development' }
      register: ec2_vpc

    - name: Create subnet for application servers
      ec2_vpc_subnet:
        state: present
        vpc_id: '{{ ec2_vpc.vpc_id }}'
        cidr: 172.32.0.0/24
        region: '{{ region }}'
        resource_tags: { 'Environment':'Development' }
      register: ec2_vpc_subnet

    - name: Create route table
      ec2_vpc_route_table:
        state: present
        vpc_id: '{{ ec2_vpc.vpc_id }}'
        region: '{{ region }}'
        tags:
          Name: Public
        subnets: [ '{{ ec2_vpc_subnet.subnet.id }}' ]
        routes:
          - dest: 0.0.0.0/0
            gateway_id: '{{ ec2_vpc.igw_id }}'

    - name: Create ACL
      ec2_vpc_nacl:
        state: present
        vpc_id: '{{ ec2_vpc.vpc_id }}'
        name: vote-app-acl
        region: '{{ region }}'
        subnets: [ '{{ ec2_vpc_subnet.subnet.id }}' ]
        ingress: [
            # rule no, protocol, allow/deny, cidr, icmp_code, icmp_type, port from, port to
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        ]
        egress: [
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        ]

    - name: Create security group
      ec2_group:
        state: present
        name: vote-app-security-group
        description: Security group for voting application
        vpc_id: '{{ ec2_vpc.vpc_id }}'
        region: '{{ region }}'
        rules:
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0

    - name: Create ec2 instances
      ec2:
        region: '{{ region }}'
        key_name: asand-key
        instance_type: t2.micro
        image: 'ami-8504fdea'
        wait: true
        instance_tags:
          type: vote-app
        count_tag:
          type: vote-app
        exact_count: '{{ number_of_instances }}'
        vpc_subnet_id: '{{ ec2_vpc_subnet.subnet.id }}'
        group: vote-app-security-group
        assign_public_ip: yes
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: '{{ item.public_ip }}'
        groupname: ec2
      with_items: '{{ ec2.tagged_instances }}'

    - name: Wait for SSH to come up
      wait_for:
        host: '{{ item.public_ip }}'
        state: started
        port: 22
        delay: 20
        timeout: 120
      with_items: '{{ ec2.tagged_instances }}'

# ubuntu ec2 instances doesn't have python2.7 installed so ansible cannot connect
# need to install it first with shell module
    - name: Install python on created instances
      shell: ssh ubuntu@'{{ item.public_ip }}' sudo apt-get install -y python2.7
      with_items: '{{ ec2.tagged_instances }}'

    - name: Create correct link for python so ansible can find it
      shell: ssh ubuntu@'{{ item.public_ip }}' sudo ln -s -f /usr/bin/python2.7 /usr/bin/python
      with_items: '{{ ec2.tagged_instances }}'


- hosts: ec2
  remote_user: ubuntu
  tasks:
    - name: Try to ping created instances
      ping:
